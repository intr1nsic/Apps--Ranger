package Apps::Ranger::VMware::ESX;

use strict;
use warnings;

use base 'Apps::Ranger';
use VMware::VIRuntime;

use Data::Dumper qw(
    Dumper
);

my %entities  = (
        datacenter      => 'datacenter',
        folder          => 'folder',
        resource_pool   => 'resourcepool',
        vm              => 'VirtualMachine',
        host            => 'HostSystem', 
    );

#-----------------------------------------------------------------
# $self->create_session()
# param username
# param password
#-----------------------------------------------------------------
sub create_session {
    my ( $self, $username, $password ) = @_;
    
    Vim::login(
        service_url => $self->service_url;
        user_name   => $susername,
        password    => $password,
    );
    
    eval(
        Vim::save_session( session_file => $elf->session_file() );
    )
    die(@_) if @_;    
}

#-----------------------------------------------------------------
# $self->load_session()
#-----------------------------------------------------------------
sub load_session {
    my ( $self ) = @_;
    
    return Vim::load_session( session_file => $self->session_file() );
}

#-----------------------------------------------------------------
# $self->get_hosts()
#-----------------------------------------------------------------
sub get_hosts {
    my ( $self ) = @_;
    
    my $hosts = Vim::find_entity_view( view_type => $entities{'host'} );
    return $hosts;
}

#-----------------------------------------------------------------
# $self->get_vms()
#-----------------------------------------------------------------
sub get_vms {
    my ( $self ) = @_;

    my $vms = Vim::find_entity_views( view_type => $entities{'vm'} );
    return $vms;
}

#-----------------------------------------------------------------
# $self->get_details()
#-----------------------------------------------------------------
sub get_details {
    my ( $self, $mo_ref, $entity ) = @_;
    
    my $entity_details = Vim::find_entity_view(
        view_type   => $mo_ref,
        filter      => { name => $entity },
    );
    
    return $entity_details;
}

1;

=head1 NAME

Apps::Ranger::VMware::ESX - A controller in the Apps::Ranger application

=head1 SYNOPSIS

This package is meant to be used in a stand alone server/CGI script or the
Perl block of an httpd.conf file.

Stand Alone Server or CGI script:

    use Apps::Ranger::VMware::ESX;

    my $cgi = Gantry::Engine::CGI->new( {
        config => {
            #...
        },
        locations => {
            '/someurl' => 'Apps::Ranger::VMware::ESX',
            #...
        },
    } );

httpd.conf:

    <Perl>
        # ...
        use Apps::Ranger::VMware::ESX;
    </Perl>

    <Location /someurl>
        SetHandler  perl-script
        PerlHandler Apps::Ranger::VMware::ESX
    </Location>

If all went well, one of these was correctly written during app generation.

=head1 DESCRIPTION

This module was originally generated by Bigtop.  But feel free to edit it.
You might even want to describe the table this module controls here.

=head1 METHODS

=over 4

=item get_orm_helper


=back


=head1 DEPENDENCIES

    Apps::Ranger
    VMware::VIRuntime
    Data::Dumper

=head1 AUTHOR

root, E<lt>root@localdomainE<gt>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2010 root

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself, either Perl version 5.8.6 or,
at your option, any later version of Perl 5 you may have available.

=cut
